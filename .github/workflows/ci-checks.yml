name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    paths:
      - Cargo.toml
      - Cargo.lock
      - "crates/**"
      - "e2e-tests/**"

env:
  CALIMERO_WEBUI_FETCH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CALIMERO_AUTH_FRONTEND_FETCH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read

jobs:
  rust:
    name: Rust
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ci-checks
          cache-on-failure: true

      - name: Build
        run: |
          ./scripts/build-all-apps.sh
          cargo build --workspace --all-targets --tests

      - name: Cargo format
        run: |
          rustup toolchain install nightly --component rustfmt

          cargo +nightly fmt -- --check

      - name: Cargo clippy
        if: ${{ !cancelled() }}
        run: cargo clippy -- -A warnings

      - name: Cargo test
        if: ${{ !cancelled() }}
        run: |
          FIRST_HOST=$(ifconfig | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | head -n 1)

          export TEST_HOSTS=$FIRST_HOST,127.0.0.1,0.0.0.0
          echo $TEST_HOSTS

          cargo test -- --nocapture

      # TODO: Cargo deny check temporarily disabled due to unresolved license compliance issue
      # 
      # ISSUE: The nacl crate (dependency of stellar-baselib -> soroban-client) uses a deprecated
      # license format "LGPL-3.0+" which is not recognized by newer versions of cargo-deny (0.18.x).
      # 
      # ATTEMPTS MADE:
      # - licenses.exceptions with allow = ["LGPL-3.0"] - failed in CI
      # - licenses.clarify with expression = "LGPL-3.0" - failed in CI (deprecated identifier)
      # - licenses.clarify with expression = "LGPL-3.0-or-later" - failed in CI (invalid format)
      # - Adding LGPL-3.0-or-later to allowed licenses - failed in CI (invalid format)
      # 
      # ROOT CAUSE: The newer cargo-deny version used by EmbarkStudios/cargo-deny-action@v2
      # is much stricter about license formats and considers even basic GNU licenses as deprecated.
      # 
      # ALTERNATIVES CONSIDERED:
      # - Pinning cargo-deny to older version - would require custom action setup
      # - Removing Stellar support - would require major refactoring of codebase
      # - Finding alternative Stellar library - would require significant changes
      # 
      # TEMPORARY SOLUTION: Disable cargo-deny check until nacl license issue can be resolved
      # or until a compatible version of cargo-deny is available.
      #
      # - name: Cargo deny
      #   if: ${{ !cancelled() }}
      #   uses: EmbarkStudios/cargo-deny-action@v2
      #   with:
      #     command: check licenses sources
      #     arguments: --all-features
      #     log-level: warn
