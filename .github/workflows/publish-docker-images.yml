name: Build and Publish Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - 'feat__*'
    paths:
      - Cargo.toml
      - Cargo.lock
      - 'crates/**'
      - 'core/Dockerfile'
      - '.github/workflows/publish-docker-images.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
    paths:
      - Cargo.toml
      - Cargo.lock
      - 'crates/**'
      - 'core/Dockerfile'
      - '.github/workflows/publish-docker-images.yml'
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

jobs:
  prepare:
    name: Prepare Docker Build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      github.event_name == 'push' || 
      github.event_name == 'pull_request' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    outputs:
      version: ${{ steps.version_info.outputs.version }}
      should_build: ${{ steps.version_info.outputs.should_build }}
      prerelease: ${{ steps.version_info.outputs.prerelease }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version info
        id: version_info
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # TESTING: Always build during testing phase
          echo "should_build=true" >> $GITHUB_OUTPUT
          echo "prerelease=true" >> $GITHUB_OUTPUT
          
          # Get version from Cargo.toml or use a dev version
          if [ -f "Cargo.toml" ]; then
            version_candidate=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[] | select(.name == "merod") | .version')
            echo "Version from Cargo: $version_candidate"
            
            # For feature branches, use a dev tag
            if [[ "${{ github.ref }}" == refs/heads/feat__* ]]; then
              branch_name=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
              echo "On feature branch: $branch_name"
              echo "version=dev-${branch_name}" >> $GITHUB_OUTPUT
            else
              echo "Using version from Cargo: $version_candidate"
              echo "version=$version_candidate" >> $GITHUB_OUTPUT
            fi
          else
            echo "No Cargo.toml found, using dev version"
            echo "version=dev-unknown" >> $GITHUB_OUTPUT
          fi
          
          # Original conditional logic (commented out for testing)
          # if [ "${{ github.event_name }}" == "workflow_run" ]; then
          #   # Extract version from the triggering workflow (Release)
          #   latest_release=$(gh api repos/${{ github.repository }}/releases/latest --jq .tag_name)
          #   if [ -n "$latest_release" ]; then
          #     echo "Using latest release version: $latest_release"
          #     echo "version=$latest_release" >> $GITHUB_OUTPUT
          #     echo "should_build=true" >> $GITHUB_OUTPUT
          #   else
          #     echo "No release version found"
          #     exit 0
          #   fi
          # else
          #   # Similar logic to the release workflow
          #   if [ -f "Cargo.toml" ]; then
          #     version_candidate=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[] | select(.name == "merod") | .version')
          #     echo "Version from Cargo: $version_candidate"
          #     
          #     if [ "${{ github.ref }}" == "refs/heads/master" ]; then
          #       echo "On master branch"
          #       echo "version=$version_candidate" >> $GITHUB_OUTPUT
          #       echo "should_build=true" >> $GITHUB_OUTPUT
          #     elif [ "${{ github.event_name }}" == "pull_request" ] && [[ "${{ github.head_ref }}" == release/* ]]; then
          #       echo "On release PR"
          #       echo "version=prerelease-${{ github.event.number }}" >> $GITHUB_OUTPUT
          #       echo "should_build=true" >> $GITHUB_OUTPUT
          #       echo "prerelease=true" >> $GITHUB_OUTPUT
          #     elif [[ "${{ github.ref }}" == refs/heads/feat__* ]]; then
          #       echo "On feature branch starting with feat__"
          #       echo "version=dev-$(echo ${{ github.ref }} | sed 's|refs/heads/feat__||')" >> $GITHUB_OUTPUT
          #       echo "should_build=true" >> $GITHUB_OUTPUT
          #       echo "prerelease=true" >> $GITHUB_OUTPUT
          #     elif [ "${{ github.event_name }}" == "pull_request" ] && [[ "${{ github.head_ref }}" == feat__* ]]; then
          #       echo "On feature PR starting with feat__"
          #       echo "version=dev-${{ github.event.number }}" >> $GITHUB_OUTPUT
          #       echo "should_build=true" >> $GITHUB_OUTPUT
          #       echo "prerelease=true" >> $GITHUB_OUTPUT
          #     elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          #       echo "Manual trigger"
          #       echo "version=$version_candidate" >> $GITHUB_OUTPUT
          #       echo "should_build=true" >> $GITHUB_OUTPUT
          #     else
          #       echo "Not building for this branch/PR"
          #     fi
          #   else
          #     echo "No Cargo.toml found"
          #   fi
          # fi 