name: End-to-end tests

on:
  push:
    branches:
      - '**'
    paths:
      - Cargo.toml
      - Cargo.lock
      - 'contracts/**'
      - 'crates/**'
      - 'e2e-tests/**'
      - '.github/workflows/e2e_tests.yml'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      SWARM_PORT: ${{ steps.prepare_e2e_tests_config.outputs.SWARM_PORT }}
      SERVER_PORT: ${{ steps.prepare_e2e_tests_config.outputs.SERVER_PORT }}
      ICP_PORT: ${{ steps.prepare_e2e_tests_config.outputs.ICP_PORT }}
      SWARM_HOST: ${{ steps.prepare_e2e_tests_config.outputs.SWARM_HOST }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup rust toolchain
        run: rustup toolchain install stable --profile minimal

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true

      - name: Build apps
        run: |
          ./apps/kv-store/build.sh

      - name: Build binaries
        run: |
          cargo build -p meroctl -p merod -p e2e-tests

      - name: Generate ports
        id: prepare_e2e_tests_config
        run: |
          # Generate unique random numbers
          random_numbers=()
          while [ ${#random_numbers[@]} -lt 3 ]; do
            num=$((RANDOM%37001 + 3000))
            if [[ ! " ${random_numbers[@]} " =~ " ${num} " ]]; then
              random_numbers+=($num)
            fi
          done

          SWARM_PORT="${random_numbers[0]}"
          SERVER_PORT="${random_numbers[1]}"
          ICP_PORT="${random_numbers[2]}"
          SWARM_HOST=$(ifconfig | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | head -n 1)

          echo "SWARM_PORT=$SWARM_PORT" >> $GITHUB_OUTPUT
          echo "SERVER_PORT=$SERVER_PORT" >> $GITHUB_OUTPUT
          echo "ICP_PORT=$ICP_PORT" >> $GITHUB_OUTPUT
          echo "SWARM_HOST=$SWARM_HOST" >> $GITHUB_OUTPUT

  
  near:
    needs: build
    name: Test NEAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup rust toolchain
        run: rustup toolchain install stable --profile minimal

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true

      - name: Build apps
        run: |
          ./apps/kv-store/build.sh

      - name: Build binaries
        run: |
          cargo build -p meroctl -p merod -p e2e-tests

      - name: Build contracts
        run: |
          ./contracts/near/context-config/build.sh
          ./contracts/near/context-proxy/build.sh

      - name: Run e2e tests
        env:
          NO_COLOR: '1'
        run: |
          export SWARM_HOST=$(ifconfig | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | head -n 1)

          ./target/debug/e2e-tests \
            --input-dir ./e2e-tests/config \
            --output-dir ./e2e-tests/corpus \
            --merod-binary ./target/debug/merod \
            --meroctl-binary ./target/debug/meroctl \
            --protocols near

      - name: Get PR number
        id: pr_number
        if: success() || failure()
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REF: ${{ github.ref }}
        shell: bash
        run: |
          echo "PR_NUMBER=$(gh pr list \
            --repo ${{ github.repository }} \
            --state open \
            --head "${GH_REF#refs/heads/}" \
            --base master \
            --json number \
            -q '.[0].number')" >> $GITHUB_OUTPUT

      - name: Update pull request comment
        if: (success() || failure()) && steps.pr_number.outputs.PR_NUMBER != ''
        uses: thollander/actions-comment-pull-request@v3
        with:
          file-path: ./e2e-tests/corpus/report.md
          pr-number: ${{ steps.pr_number.outputs.PR_NUMBER }}
          comment-tag: e2e-tests-report-near
          mode: recreate

      - name: Upload artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-tests-corpus
          path: e2e-tests/corpus/
          retention-days: 2

  icp:
    needs: build
    name: Test ICP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup rust toolchain
        run: rustup toolchain install stable --profile minimal

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true

      - name: Build apps
        run: |
          ./apps/kv-store/build.sh

      - name: Build binaries
        run: |
          cargo build -p meroctl -p merod -p e2e-tests

      - name: Install dfx
        uses: dfinity/setup-dfx@main

      - name: Update config.json
        env:
          ICP_PORT: ${{ needs.build.outputs.ICP_PORT }}
        run: |
          jq --arg icpPort "$ICP_PORT" \
             '.protocolSandboxes[1].config.rpcUrl = "http://127.0.0.1:\($icpPort)"' \
             e2e-tests/config/config.json > updated_config.json
          mv updated_config.json e2e-tests/config/config.json
          echo "Updated config.json with ICP_PORT=$ICP_PORT"
          cat e2e-tests/config/config.json

      - name: Deploy ICP local devnet
        env:
          ICP_PORT: ${{ needs.build.outputs.ICP_PORT }}
        run: |
          echo "ICP_PORT=$ICP_PORT"
          cargo install candid-extractor
          cd ./contracts/icp/context-config
          ICP_PORT=$ICP_PORT ./deploy_devnet.sh
          cd ../../..

      - name: Run e2e tests
        env:
          NO_COLOR: '1'
          ICP_PORT: ${{ needs.build.outputs.ICP_PORT }}
        run: |
          export SWARM_HOST=$(ifconfig | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | head -n 1)
          
          echo "Running ICP e2e tests with port $ICP_PORT"
          ./target/debug/e2e-tests \
            --input-dir ./e2e-tests/config \
            --output-dir ./e2e-tests/corpus \
            --merod-binary ./target/debug/merod \
            --meroctl-binary ./target/debug/meroctl \
            --protocols icp

      - name: Get PR number
        id: pr_number
        if: success() || failure()
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REF: ${{ github.ref }}
        shell: bash
        run: |
          echo "PR_NUMBER=$(gh pr list \
            --repo ${{ github.repository }} \
            --state open \
            --head "${GH_REF#refs/heads/}" \
            --base master \
            --json number \
            -q '.[0].number')" >> $GITHUB_OUTPUT

      - name: Update pull request comment
        if: (success() || failure()) && steps.pr_number.outputs.PR_NUMBER != ''
        uses: thollander/actions-comment-pull-request@v3
        with:
          file-path: ./e2e-tests/corpus/report.md
          pr-number: ${{ steps.pr_number.outputs.PR_NUMBER }}
          comment-tag: e2e-tests-report-near-icp
          mode: recreate

      - name: Upload artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-tests-corpus
          path: e2e-tests/corpus/
          retention-days: 2

  stellar:
    needs: build
    name: Test Stellar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup rust toolchain
        run: rustup toolchain install stable --profile minimal

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true

      - name: Build apps
        run: |
          ./apps/kv-store/build.sh

      - name: Build binaries
        run: |
          cargo build -p meroctl -p merod -p e2e-tests

      - name: Build contracts
        run: |
          ./contracts/stellar/context-config/build.sh
          ./contracts/stellar/context-proxy/build.sh

      - name: Deploy Stellar local devnet
        run: |
          cd ./contracts/stellar/context-config
          ./deploy_devnet_env.sh
          cd ../../..

      - name: Run e2e tests
        env:
          NO_COLOR: '1'
        run: |
          export SWARM_HOST=$(ifconfig | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | head -n 1)
          
          echo "Running Stellar e2e tests"
          ./target/debug/e2e-tests \
            --input-dir ./e2e-tests/config \
            --output-dir ./e2e-tests/corpus \
            --merod-binary ./target/debug/merod \
            --meroctl-binary ./target/debug/meroctl \
            --protocols stellar

      - name: Upload artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-tests-corpus-stellar
          path: e2e-tests/corpus/
          retention-days: 2
