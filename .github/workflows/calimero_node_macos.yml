name: Build and Upload Binary

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup rust toolchain
        run: rustup toolchain install stable --profile minimal

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}-calimero-node-${{ matrix.target }}

      - name: Install target for ${{ matrix.target }}
        run: rustup target add ${{ matrix.target }}

      - name: Build the crate
        run: cargo build -p calimero-node --release --target ${{ matrix.target }}

      - name: Compress artifact using gzip
        run: |
          tar -czf calimero-node_${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release calimero-node

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: calimero-node_${{ github.sha }}_${{ matrix.target }}.tar.gz
          path: calimero-node_${{ matrix.target }}.tar.gz
          retention-days: 3

  release:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup gh CLI
        uses: actions/setup-gh@v2

      - name: Check if release exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -1 | awk -F\" '{print $2}')
          RELEASE_URL=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/tags/v$VERSION" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" | jq -r '.url')
          if [[ "$RELEASE_URL" != "null" ]]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        if: steps.check_release.outputs.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -1 | awk -F\" '{print $2}')
          gh release create "v$VERSION" --title "Release v$VERSION" --notes "Release for version $VERSION"

      - name: Upload artifact to release
        if: steps.check_release.outputs.exists == 'false'
        uses: actions/upload-artifact@v3
        with:
          name: calimero-node_${{ github.sha }}_${{ matrix.target }}.tar.gz
          path: target/${{ matrix.target }}/release/calimero-node
