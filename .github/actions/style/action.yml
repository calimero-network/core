name: Code Style Checks
description: 'Run linter and formatter'
runs:
  using: 'composite'
  steps:
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v45

    # Check for Markdown/MDX changes
    - name: Check for Markdown/MDX changes
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      shell: bash
      run: |
        echo "Checking for Markdown/MDX changes..."
        if echo "$ALL_CHANGED_FILES" | grep -qE '\.mdx?$'; then
           if ! pnpm check:md; then
            echo "Markdown or MDX files are not properly formatted."
            exit 1  # Exit with a non-zero status code to indicate failure
           fi
        fi

    # Check for Rust code changes and run Rust formatting
    - name: Check for Rust code changes
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      shell: bash
      run: |
        echo "Checking for Rust code changes..."
        if echo "$ALL_CHANGED_FILES" | grep -q '\.rs$'; then
          echo "Running checks for the Rust code..."

          # Install the nightly toolchain
          rustup toolchain install nightly

          # Install rustfmt for the nightly toolchain
          rustup component add rustfmt --toolchain nightly

          if ! cargo +nightly fmt -- --check; then
            echo "Rust code is not properly formatted."
            exit 1  # Exit with a non-zero status code if formatting fails
          fi
          if ! cargo clippy -- -A warnings; then
            echo "Rust code is not properly linted."
            exit 1  # Exit with a non-zero status code if formatting fails
          fi
        fi
