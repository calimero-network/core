type AccountBalanceArgs = record { account : blob };
type Result = variant { Ok : nat64; Err : TransferError };
type Timestamp = record { timestamp_nanos : nat64 };
type Tokens = record { e8s : nat64 };
type TransferArgs = record {
  to : blob;
  fee : Tokens;
  memo : nat64;
  from_subaccount : opt blob;
  created_at_time : opt Timestamp;
  amount : Tokens;
};
type TransferError = variant {
  TxTooOld : record { allowed_window_nanos : nat64 };
  BadFee : record { expected_fee : Tokens };
  TxDuplicate : record { duplicate_of : nat64 };
  TxCreatedInFuture;
  InsufficientFunds : record { balance : Tokens };
};
service : {
  account_balance : (AccountBalanceArgs) -> (Tokens) query;
  transfer : (TransferArgs) -> (Result);
}
