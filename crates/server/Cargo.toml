[package]
name = "calimero-server"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
repository.workspace = true
license.workspace = true

[dependencies]
axum = { workspace = true, features = ["multipart"] }
eyre.workspace = true
futures-util.workspace = true
hex.workspace = true
libp2p.workspace = true
multiaddr.workspace = true
prometheus-client.workspace = true
rand.workspace = true
reqwest.workspace = true
rust-embed = { workspace = true, features = ["mime-guess", "interpolate-folder-path"] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
tokio.workspace = true
tokio-util.workspace = true
tower-http = { workspace = true, features = ["cors", "fs"] }
tower-sessions = { workspace = true, optional = true }
tracing.workspace = true

calimero-context-config.workspace = true
calimero-context-primitives.workspace = true
calimero-node-primitives.workspace = true
calimero-primitives.workspace = true
calimero-server-primitives.workspace = true
calimero-store = { workspace = true, features = ["serde"] }

[dev-dependencies]
color-eyre.workspace = true
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }
tracing-subscriber = { workspace = true, features = ["env-filter"] }

[build-dependencies]
bytes.workspace = true
cached-path.workspace = true
eyre.workspace = true
reqwest = { workspace = true, features = ["blocking"] }
# cached-path compat
reqwest-compat = { version = "0.11", package = "reqwest", features = ["blocking"] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true

[features]
admin = ["dep:tower-sessions"]
jsonrpc = []
metrics = []
websocket = ["axum/ws"]
host_layer = []

[lints]
workspace = true
