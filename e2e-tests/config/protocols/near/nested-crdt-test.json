{
  "steps": [
    {
      "applicationInstall": {
        "application": {
          "localFile": "./apps/nested-crdt-test/res/nested_crdt_test.wasm"
        },
        "target": "allMembers"
      }
    },
    {
      "contextCreate": null
    },
    {
      "contextCreateAlias": {
        "aliasName": "nested_crdt_test"
      }
    },
    {
      "wait": {
        "for": "broadcast",
        "durationMs": 5000,
        "description": [
          "Wait for context initialization"
        ]
      }
    },
    {
      "call": {
        "methodName": "increment_counter",
        "argsJson": {
          "key": "views"
        },
        "expectedResultJson": 1,
        "target": "inviter",
        "description": [
          "Node 1: Increment 'views' counter to 1"
        ]
      }
    },
    {
      "call": {
        "methodName": "increment_counter",
        "argsJson": {
          "key": "views"
        },
        "expectedResultJson": 2,
        "target": "inviter",
        "description": [
          "Node 1: Increment 'views' again to 2"
        ]
      }
    },
    {
      "wait": {
        "for": "broadcast",
        "durationMs": 3000
      }
    },
    {
      "contextInviteJoin": null
    },
    {
      "wait": {
        "for": "consensus",
        "durationMs": 5000,
        "description": [
          "Wait for mesh formation + sync"
        ]
      }
    },
    {
      "call": {
        "methodName": "get_counter",
        "argsJson": {
          "key": "views"
        },
        "expectedResultJson": 2,
        "target": "allMembers",
        "retries": 10,
        "intervalMs": 1000,
        "description": [
          "Verify all nodes have counter=2"
        ]
      }
    },
    {
      "call": {
        "methodName": "increment_counter",
        "argsJson": {
          "key": "views"
        },
        "expectedResultJson": null,
        "target": "inviter",
        "description": [
          "Node 1: Increment to 3 (concurrent test setup)"
        ]
      }
    },
    {
      "call": {
        "methodName": "increment_counter",
        "argsJson": {
          "key": "views"
        },
        "expectedResultJson": null,
        "target": "invitees",
        "description": [
          "Nodes 2 & 3: Both increment concurrently (each sees 2, increments to 3)"
        ]
      }
    },
    {
      "wait": {
        "for": "consensus",
        "durationMs": 5000,
        "description": [
          "Wait for concurrent increments to sync and CRDT merge to happen"
        ]
      }
    },
    {
      "call": {
        "methodName": "get_counter",
        "argsJson": {
          "key": "views"
        },
        "expectedResultJson": 5,
        "target": "allMembers",
        "retries": 15,
        "intervalMs": 2000,
        "description": [
          "CRITICAL: Counter should be 5 (2 + 1 + 1 + 1 from 3 concurrent increments)",
          "This proves Map<String, Counter> merges correctly with sum semantics!"
        ]
      }
    },
    {
      "call": {
        "methodName": "set_register",
        "argsJson": {
          "key": "status",
          "value": "online"
        },
        "expectedResultJson": null,
        "target": "inviter"
      }
    },
    {
      "wait": {
        "for": "broadcast",
        "durationMs": 3000
      }
    },
    {
      "call": {
        "methodName": "get_register",
        "argsJson": {
          "key": "status"
        },
        "expectedResultJson": "online",
        "target": "allMembers",
        "retries": 5,
        "intervalMs": 1000,
        "description": [
          "Verify all nodes have status='online'"
        ]
      }
    },
    {
      "call": {
        "methodName": "set_register",
        "argsJson": {
          "key": "status",
          "value": "busy"
        },
        "expectedResultJson": null,
        "target": "invitees",
        "description": [
          "Nodes 2 & 3: Set to 'busy' (concurrent, newer timestamp)"
        ]
      }
    },
    {
      "wait": {
        "for": "consensus",
        "durationMs": 5000
      }
    },
    {
      "call": {
        "methodName": "get_register",
        "argsJson": {
          "key": "status"
        },
        "expectedResultJson": "busy",
        "target": "allMembers",
        "retries": 10,
        "intervalMs": 1000,
        "description": [
          "Latest timestamp wins: status should be 'busy' on all nodes"
        ]
      }
    },
    {
      "call": {
        "methodName": "set_metadata",
        "argsJson": {
          "outer_key": "doc-1",
          "inner_key": "title",
          "value": "My Document"
        },
        "expectedResultJson": null,
        "target": "inviter",
        "description": [
          "Node 1: Set doc-1 title"
        ]
      }
    },
    {
      "wait": {
        "for": "broadcast",
        "durationMs": 3000
      }
    },
    {
      "call": {
        "methodName": "get_metadata",
        "argsJson": {
          "outer_key": "doc-1",
          "inner_key": "title"
        },
        "expectedResultJson": "My Document",
        "target": "allMembers",
        "retries": 5,
        "intervalMs": 1000
      }
    },
    {
      "call": {
        "methodName": "set_metadata",
        "argsJson": {
          "outer_key": "doc-1",
          "inner_key": "author",
          "value": "Alice"
        },
        "expectedResultJson": null,
        "target": "invitees",
        "description": [
          "Nodes 2 & 3: Set author field (concurrent with next step)"
        ]
      }
    },
    {
      "call": {
        "methodName": "set_metadata",
        "argsJson": {
          "outer_key": "doc-1",
          "inner_key": "status",
          "value": "draft"
        },
        "expectedResultJson": null,
        "target": "inviter",
        "description": [
          "Node 1: Set status field (concurrent with author)"
        ]
      }
    },
    {
      "wait": {
        "for": "consensus",
        "durationMs": 5000,
        "description": [
          "CRITICAL: This tests nested map field-level merge!",
          "Node 1 set status, Nodes 2&3 set author concurrently",
          "After merge, BOTH fields should be present (not LWW on whole map)"
        ]
      }
    },
    {
      "call": {
        "methodName": "get_metadata",
        "argsJson": {
          "outer_key": "doc-1",
          "inner_key": "title"
        },
        "expectedResultJson": "My Document",
        "target": "allMembers",
        "retries": 10,
        "intervalMs": 1000,
        "description": [
          "Verify title still present"
        ]
      }
    },
    {
      "call": {
        "methodName": "get_metadata",
        "argsJson": {
          "outer_key": "doc-1",
          "inner_key": "author"
        },
        "expectedResultJson": "Alice",
        "target": "allMembers",
        "retries": 10,
        "intervalMs": 1000,
        "description": [
          "Verify author field present (from concurrent update)"
        ]
      }
    },
    {
      "call": {
        "methodName": "get_metadata",
        "argsJson": {
          "outer_key": "doc-1",
          "inner_key": "status"
        },
        "expectedResultJson": "draft",
        "target": "allMembers",
        "retries": 10,
        "intervalMs": 1000,
        "description": [
          "Verify status field present (from concurrent update)",
          "SUCCESS: All 3 fields present = nested map merge worked!"
        ]
      }
    },
    {
      "call": {
        "methodName": "push_metric",
        "argsJson": {
          "value": 5
        },
        "expectedResultJson": 1,
        "target": "inviter",
        "description": [
          "Node 1: Push Counter(5) to metrics vector"
        ]
      }
    },
    {
      "call": {
        "methodName": "push_metric",
        "argsJson": {
          "value": 10
        },
        "expectedResultJson": 2,
        "target": "inviter",
        "description": [
          "Node 1: Push Counter(10) to metrics vector"
        ]
      }
    },
    {
      "wait": {
        "for": "broadcast",
        "durationMs": 3000
      }
    },
    {
      "call": {
        "methodName": "metrics_len",
        "argsJson": {},
        "expectedResultJson": 2,
        "target": "allMembers",
        "retries": 5,
        "intervalMs": 1000
      }
    },
    {
      "call": {
        "methodName": "get_metric",
        "argsJson": {
          "index": 0
        },
        "expectedResultJson": 5,
        "target": "allMembers",
        "retries": 5,
        "intervalMs": 1000
      }
    },
    {
      "call": {
        "methodName": "add_tag",
        "argsJson": {
          "key": "user-1",
          "tag": "rust"
        },
        "expectedResultJson": null,
        "target": "inviter"
      }
    },
    {
      "call": {
        "methodName": "add_tag",
        "argsJson": {
          "key": "user-1",
          "tag": "backend"
        },
        "expectedResultJson": null,
        "target": "inviter"
      }
    },
    {
      "wait": {
        "for": "broadcast",
        "durationMs": 3000
      }
    },
    {
      "call": {
        "methodName": "has_tag",
        "argsJson": {
          "key": "user-1",
          "tag": "rust"
        },
        "expectedResultJson": true,
        "target": "allMembers",
        "retries": 5,
        "intervalMs": 1000
      }
    },
    {
      "call": {
        "methodName": "add_tag",
        "argsJson": {
          "key": "user-1",
          "tag": "crdt"
        },
        "expectedResultJson": null,
        "target": "invitees",
        "description": [
          "Nodes 2 & 3: Add 'crdt' tag concurrently"
        ]
      }
    },
    {
      "call": {
        "methodName": "add_tag",
        "argsJson": {
          "key": "user-1",
          "tag": "distributed"
        },
        "expectedResultJson": null,
        "target": "inviter",
        "description": [
          "Node 1: Add 'distributed' tag concurrently"
        ]
      }
    },
    {
      "wait": {
        "for": "consensus",
        "durationMs": 5000,
        "description": [
          "Wait for concurrent tag additions to merge (union)"
        ]
      }
    },
    {
      "call": {
        "methodName": "has_tag",
        "argsJson": {
          "key": "user-1",
          "tag": "crdt"
        },
        "expectedResultJson": true,
        "target": "allMembers",
        "retries": 10,
        "intervalMs": 1000,
        "description": [
          "Verify 'crdt' tag present (from concurrent add)"
        ]
      }
    },
    {
      "call": {
        "methodName": "has_tag",
        "argsJson": {
          "key": "user-1",
          "tag": "distributed"
        },
        "expectedResultJson": true,
        "target": "allMembers",
        "retries": 10,
        "intervalMs": 1000,
        "description": [
          "Verify 'distributed' tag present (from concurrent add)"
        ]
      }
    },
    {
      "call": {
        "methodName": "get_tag_count",
        "argsJson": {
          "key": "user-1"
        },
        "expectedResultJson": 4,
        "target": "allMembers",
        "retries": 10,
        "intervalMs": 1000,
        "description": [
          "Verify all 4 tags present: rust, backend, crdt, distributed",
          "SUCCESS: Union merge preserved all concurrent additions!"
        ]
      }
    }
  ]
}

