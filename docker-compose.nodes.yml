x-node-defaults: &node-defaults
  build:
    context: .
    dockerfile: Dockerfile
    target: runtime
    secrets:
      - gh-token
  user: root
  volumes:
    - calimero_auth_node:/calimero
  healthcheck:
    test:
      [
        "CMD-SHELL",
        "curl -f http://localhost:$${NODE_PORT}/admin-api/peers || exit 0",
      ]
    interval: 10s
    timeout: 5s
    retries: 5
  networks:
    - internal
    - web

services:
  # Node 1
  node1:
    <<: *node-defaults
    environment:
      - NODE_NAME=authnode1
      - SWARM_PORT=2428
      - NODE_PORT=2528
      - CALIMERO_HOME=/calimero/data
    ports:
      - "2428:2428"
      - "2528:2528"
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "mkdir -p $${CALIMERO_HOME} $${CALIMERO_HOME}/../logic $${CALIMERO_HOME}/../credentials &&
      if [ ! -d $${CALIMERO_HOME}/config ]; then
        merod --node-name $${NODE_NAME} --home $${CALIMERO_HOME} init --server-host 0.0.0.0 --server-port 2528 --swarm-port 2428
      fi &&
      merod --node-name $${NODE_NAME} --home $${CALIMERO_HOME} run"
    labels:
      - "traefik.enable=true"

      # Node1 API routes (protected when auth is available)
      - "traefik.http.routers.node1-api.rule=Host(`node1.127.0.0.1.nip.io`) && (PathPrefix(`/jsonrpc`) || PathPrefix(`/admin-api/`))"
      - "traefik.http.routers.node1-api.entrypoints=web"
      - "traefik.http.routers.node1-api.service=node1-core"
      - "traefik.http.routers.node1-api.middlewares=cors,auth-node1"

      # Node1 WebSocket (protected when auth is available)
      - "traefik.http.routers.node1-ws.rule=Host(`node1.127.0.0.1.nip.io`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.node1-ws.entrypoints=web"
      - "traefik.http.routers.node1-ws.service=node1-core"
      - "traefik.http.routers.node1-ws.middlewares=cors,auth-node1"

      # Node1 Admin dashboard (publicly accessible)
      - "traefik.http.routers.node1-dashboard.rule=Host(`node1.127.0.0.1.nip.io`) && PathPrefix(`/admin-dashboard`)"
      - "traefik.http.routers.node1-dashboard.entrypoints=web"
      - "traefik.http.routers.node1-dashboard.service=node1-core"
      - "traefik.http.routers.node1-dashboard.middlewares=cors"

      # Auth service route for node1 subdomain (both /auth/ and /admin/)
      - "traefik.http.routers.node1-auth.rule=Host(`node1.127.0.0.1.nip.io`) && (PathPrefix(`/auth/`) || PathPrefix(`/admin/`))"
      - "traefik.http.routers.node1-auth.entrypoints=web"
      - "traefik.http.routers.node1-auth.service=auth-service"
      - "traefik.http.routers.node1-auth.middlewares=cors,auth-headers"
      - "traefik.http.routers.node1-auth.priority=200"

      # Forward Auth middleware for node1 service
      - "traefik.http.middlewares.auth-node1.forwardauth.address=http://auth:3001/auth/validate"
      - "traefik.http.middlewares.auth-node1.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.auth-node1.forwardauth.authResponseHeaders=X-Auth-User,X-Auth-Permissions"

      # Define the service
      - "traefik.http.services.node1-core.loadbalancer.server.port=2528"

  # Node 2
  node2:
    <<: *node-defaults
    environment:
      - NODE_NAME=authnode2
      - SWARM_PORT=2429
      - NODE_PORT=2529
      - CALIMERO_HOME=/calimero/data
    ports:
      - "2429:2429"
      - "2529:2529"
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "mkdir -p $${CALIMERO_HOME} $${CALIMERO_HOME}/../logic $${CALIMERO_HOME}/../credentials &&
      if [ ! -d $${CALIMERO_HOME}/config ]; then
        merod --node-name $${NODE_NAME} --home $${CALIMERO_HOME} init --server-host 0.0.0.0 --server-port 2529 --swarm-port 2429
      fi &&
      merod --node-name $${NODE_NAME} --home $${CALIMERO_HOME} run"
    labels:
      - "traefik.enable=true"

      # Node2 API routes (protected when auth is available)
      - "traefik.http.routers.node2-api.rule=Host(`node2.127.0.0.1.nip.io`) && (PathPrefix(`/jsonrpc`) || PathPrefix(`/admin-api/`))"
      - "traefik.http.routers.node2-api.entrypoints=web"
      - "traefik.http.routers.node2-api.service=node2-core"
      - "traefik.http.routers.node2-api.middlewares=cors,auth-node2"

      # Node2 WebSocket (protected when auth is available)
      - "traefik.http.routers.node2-ws.rule=Host(`node2.127.0.0.1.nip.io`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.node2-ws.entrypoints=web"
      - "traefik.http.routers.node2-ws.service=node2-core"
      - "traefik.http.routers.node2-ws.middlewares=cors,auth-node2"

      # Node2 Admin dashboard (publicly accessible)
      - "traefik.http.routers.node2-dashboard.rule=Host(`node2.127.0.0.1.nip.io`) && PathPrefix(`/admin-dashboard`)"
      - "traefik.http.routers.node2-dashboard.entrypoints=web"
      - "traefik.http.routers.node2-dashboard.service=node2-core"
      - "traefik.http.routers.node2-dashboard.middlewares=cors"

      # Auth service route for node2 subdomain (both /auth/ and /admin/)
      - "traefik.http.routers.node2-auth.rule=Host(`node2.127.0.0.1.nip.io`) && (PathPrefix(`/auth/`) || PathPrefix(`/admin/`))"
      - "traefik.http.routers.node2-auth.entrypoints=web"
      - "traefik.http.routers.node2-auth.service=auth-service"
      - "traefik.http.routers.node2-auth.middlewares=cors,auth-headers"
      - "traefik.http.routers.node2-auth.priority=200"

      # Forward Auth middleware for node2 service
      - "traefik.http.middlewares.auth-node2.forwardauth.address=http://auth:3001/auth/validate"
      - "traefik.http.middlewares.auth-node2.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.auth-node2.forwardauth.authResponseHeaders=X-Auth-User,X-Auth-Permissions"

      # Define the service
      - "traefik.http.services.node2-core.loadbalancer.server.port=2529"

  # Node 3
  node3:
    <<: *node-defaults
    environment:
      - NODE_NAME=authnode3
      - SWARM_PORT=2430
      - NODE_PORT=2530
      - CALIMERO_HOME=/calimero/data
    ports:
      - "2430:2430"
      - "2530:2530"
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "mkdir -p $${CALIMERO_HOME} $${CALIMERO_HOME}/../logic $${CALIMERO_HOME}/../credentials &&
      if [ ! -d $${CALIMERO_HOME}/config ]; then
        merod --node-name $${NODE_NAME} --home $${CALIMERO_HOME} init --server-host 0.0.0.0 --server-port 2530 --swarm-port 2430
      fi &&
      merod --node-name $${NODE_NAME} --home $${CALIMERO_HOME} run"
    labels:
      - "traefik.enable=true"

      # Node3 API routes (protected when auth is available)
      - "traefik.http.routers.node3-api.rule=Host(`node3.127.0.0.1.nip.io`) && (PathPrefix(`/jsonrpc`) || PathPrefix(`/admin-api/`))"
      - "traefik.http.routers.node3-api.entrypoints=web"
      - "traefik.http.routers.node3-api.service=node3-core"
      - "traefik.http.routers.node3-api.middlewares=cors,auth-node3"

      # Node3 WebSocket (protected when auth is available)
      - "traefik.http.routers.node3-ws.rule=Host(`node3.127.0.0.1.nip.io`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.node3-ws.entrypoints=web"
      - "traefik.http.routers.node3-ws.service=node3-core"
      - "traefik.http.routers.node3-ws.middlewares=cors,auth-node3"

      # Node3 Admin dashboard (publicly accessible)
      - "traefik.http.routers.node3-dashboard.rule=Host(`node3.127.0.0.1.nip.io`) && PathPrefix(`/admin-dashboard`)"
      - "traefik.http.routers.node3-dashboard.entrypoints=web"
      - "traefik.http.routers.node3-dashboard.service=node3-core"
      - "traefik.http.routers.node3-dashboard.middlewares=cors"

      # Auth service route for node3 subdomain (both /auth/ and /admin/)
      - "traefik.http.routers.node3-auth.rule=Host(`node3.127.0.0.1.nip.io`) && (PathPrefix(`/auth/`) || PathPrefix(`/admin/`))"
      - "traefik.http.routers.node3-auth.entrypoints=web"
      - "traefik.http.routers.node3-auth.service=auth-service"
      - "traefik.http.routers.node3-auth.middlewares=cors,auth-headers"
      - "traefik.http.routers.node3-auth.priority=200"

      # Forward Auth middleware for node3 service
      - "traefik.http.middlewares.auth-node3.forwardauth.address=http://auth:3001/auth/validate"
      - "traefik.http.middlewares.auth-node3.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.auth-node3.forwardauth.authResponseHeaders=X-Auth-User,X-Auth-Permissions"

      # Define the service
      - "traefik.http.services.node3-core.loadbalancer.server.port=2530"

      # Shared middlewares (only define once)
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolexposeheaders=X-Auth-Error"

      # Auth headers middleware (only define once)
      - "traefik.http.middlewares.auth-headers.headers.customrequestheaders.X-Node-ID=auth"

      # Auth service reference (will be provided by external auth container)
      - "traefik.http.services.auth-service.loadbalancer.server.port=3001"

networks:
  web:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME:-calimero}_web
  internal:
    internal: true
    name: ${COMPOSE_PROJECT_NAME:-calimero}_internal

volumes:
  calimero_auth_node:
    driver: local

secrets:
  gh-token:
    environment: GH_TOKEN